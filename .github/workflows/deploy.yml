name: Deploy to ECS

on:
  push:
    branches:
      - feature/disruptedDeploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 테스트 및 빌드하기 (일단 테스트 없이 빌드)
        run: ./gradlew clean build -x test

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인하기
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Docker 이미지 생성
        run: docker build -t monew .

      - name: Docker 이미지에 Tag 붙이기
        run: docker tag monew ${{ steps.login-ecr.outputs.registry }}/monew:latest

      - name: ECR에 Docker 이미지 Push하기
        run: docker push ${{ steps.login-ecr.outputs.registry }}/monew:latest

      - name: ECS 서비스 중지(프리티어 환경 고려)
        run: |
          aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_SERVICE }} \
          --desired-count 0

      - name: ECS 서비스 업데이트
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --task-definition $NEW_TASK_DEF_ARN \
            --desired-count 1 \
            --force-new-deployment